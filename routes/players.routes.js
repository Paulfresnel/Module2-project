


const express = require('express');
const router = express.Router();
const axios = require('axios')
const Prediction = require('../models/Prediction.model')
const User = require('../models/User.model');
const Player = require('../models/Player.model');


let API_KEY =""
let createUserConfig = {
    method: 'post',
    url: 'http://api.cup2022.ir/api/v1/user',
    headers: 
        "Content-Type: application/json"
        ,
    data: { //replace Date here by your personal information
        "name" : `${process.env.API_NAME}`,
        "email": `${process.env.API_EMAIL}`,
        "password": `${process.env.API_PASS}`,
        "passwordConfirm" : `${process.env.API_PASS}`
    }
};

//To Log In with Email and Password on the API => response will give back a Token to access all the APIs services, this token is autogenerated every time you login
let loginUserConfig = {
    method: 'post',
    url: 'http://api.cup2022.ir/api/v1/user/login',
    headers: "Content-Type: application/json",
    data: { //replace Date here by your personal information
        "email": `${process.env.API_EMAIL}`,
        "password": `${process.env.API_PASS}`
    }
};

//To send a GET request to API using the token from login
let tokenAcessGETConfig = {
    method:'get',
    headers: `Authorization : Bearer ${API_KEY}`
}

const isLoggedIn = require("../middleware/isLoggedIn")
const isLoggedOut = require("../middleware/isLoggedOut");


// GET /user-dashboard-All-Players
router.get('/profile/:username/players',isLoggedIn ,  async (req,res)=>{
    let userInfo = req.session.currentUser
    
        Player.find()
        .then( allPlayersFromDb =>{
        res.render('players', {allPlayersFromDb, userInfo} )    
        })
    .catch(err=>{
        res.render('error')
    })
})

// POST/Players to user dashboard
router.post('/profile/:id/players/add',isLoggedIn , (req,res)=>{
    const playerId = req.params.id
    const userId = req.session.currentUser._id

    Player.findById(playerId)
        .then (playerData=>{
            User.findById(userId)
                .then (userInfo=>{
                    userInfo.players.push(playerData)
                    userInfo.save()
                    res.redirect(`/profile/${userId}`)
                })
                .catch(err=>{
                    res.render('error')
                })           
           })
    
})

// DELETE/Player in the dashboard
router.post('/profile/:id/players/delete', (req,res)=>{
    let playersId = req.params.id;
    let userId = req.session.currentUser._id
    Player.findByIdAndDelete(playersId)
    .then((x)=>{
        User.findById(userId)
        .then(userInfo=>{
            userInfo.save()
            res.redirect('/profile/:id/')
        })
        .catch(err=>{
            res.render('error')
        })
    })
})

// Update/Player in the dashboard
router.post('/profile/:id/players/update', (req,res)=>{
    let playersId = req.params.id;
    let userId = req.session.currentUser._id
    Player.findByIdAndDelete(playersId)
    .then((x)=>{
        User.findById(userId)
        .then(userInfo=>{
            userInfo.save()
            res.redirect('/profile/:id/players')
        })
        .catch(err=>{
            res.render('error')
        })
    })
})


router.post('/profile/:username/players/verify', async (req,res)=>{
    let userInfo = req.session.currentUser

    await axios(loginUserConfig)
        .then (data=>{
            API_KEY = data.data.data.token
            return API_KEY 
    })
    
        
        await axios("http://api.cup2022.ir/api/v1/match",  {
            method:'get',
            headers: `Authorization : Bearer ${API_KEY}`
        })
            .then(matchesData=> {
                matchesArray = matchesData.data.data
                return matchesArray
            })

        User.findById(userInfo._id)
            .populate('players')
            .then (userInfoPupulated=>{
                console.log(userInfoPupulated)
                for (i=0;i<userInfoPupulated.players.length;i++){
                    let country = userInfoPupulated.players[0].team
                    let countryLowercase = country.charAt(0).toUpperCase() + country.slice(1);
                    console.log(countryLowercase)
                    let filteredAwayMatchesArray = matchesArray.filter(match => match.away_team_en === countryLowercase)
                    console.log(filteredAwayMatchesArray)

                    for (y=0;y<filteredAwayMatchesArray.length;y++){
                        if (filteredAwayMatchesArray[y].home_score < filteredAwayMatchesArray[y].away_score){
                            userInfoPupulated.fantasyPoints += 25;
                            console.log(userInfoPupulated)
                        } else {
                            continue;
                        }
                    }

                    let filteredHomeMatchesArray = matchesArray.filter(match => match.home_team_en === countryLowercase)
                    console.log(filteredHomeMatchesArray)
                    for (y=0;y<filteredHomeMatchesArray.length;y++){
                        if (filteredHomeMatchesArray[y].home_score > filteredHomeMatchesArray[y].away_score){
                            userInfoPupulated.fantasyPoints += 25;
                            console.log(userInfoPupulated)

                        } else {
                            continue;   
                        }
                    }

                }
                res.redirect(`/profile/${userInfo.username}`)
            })
})



module.exports = router;