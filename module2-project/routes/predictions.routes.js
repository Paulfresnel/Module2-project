const express = require('express');
const router = express.Router();
const axios = require('axios')
const Prediction = require('../models/Prediction.model')

let API_KEY =""

const isLoggedIn = require("../middleware/isLoggedIn")
const isLoggedOut = require("../middleware/isLoggedOut");
const User = require('../models/User.model');


//Axios Call to create a User to be able to use the API services
let createUserConfig = {
    method: 'post',
    url: 'http://api.cup2022.ir/api/v1/user',
    headers: 
        "Content-Type: application/json"
        ,
    data: { //replace Date here by your personal information
        "name" : `${process.env.API_NAME}`,
        "email": `${process.env.API_EMAIL}`,
        "password": `${process.env.API_PASS}`,
        "passwordConfirm" : `${process.env.API_PASS}`
    }
};

//To Log In with Email and Password on the API => response will give back a Token to access all the APIs services, this token is autogenerated every time you login
let loginUserConfig = {
    method: 'post',
    url: 'http://api.cup2022.ir/api/v1/user/login',
    headers: "Content-Type: application/json",
    data: { //replace Date here by your personal information
        "email": `${process.env.API_EMAIL}`,
        "password": `${process.env.API_PASS}`
    }
};

//To send a GET request to API using the token from login
let tokenAcessGETConfig = {
    method:'get',
    headers: `Authorization : Bearer ${API_KEY}`
}


router.post('/predictions/:id', (req,res)=>{
   let predictionId = req.params.id;
   let userId = req.session.currentUser._id
   const { awayScore, homeScore } = req.body
    Prediction.findByIdAndUpdate(predictionId, {awayScore, homeScore}, {new: true})
    .then (predictionInfo=>{
        res.redirect(`/profile/${userId}/predictions`)
    })
})

router.post('/predictions/:id/delete', (req,res)=>{
    let predictionId = req.params.id;
    let userId = req.session.currentUser._id
    Prediction.findByIdAndDelete(predictionId)
    .then(data=>{
        console.log("prediciton deleted")
        User.findById(userId)
        .then(userInfo=>{
            userInfo.predictionsCount -= 1;
            userInfo.save()
            res.redirect(`/profile/${userId}/predictions`)
        })
    })
})



module.exports = router;

















